name: CI
on:
  # When added to a merge queue.
  # See https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue#triggering-merge-group-checks-with-github-actions
  merge_group:
  pull_request:
    branches: ['main', 'release/**']

permissions: # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  #
  # Build containerd binaries
  #
  binaries:
    name: Binaries
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    strategy:
      matrix:
        os: [actuated-arm64-4cpu-16gb]
        go-version: ["1.21.6", "1.22.0"]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-go
      - name: Make
        run: |
          make build
          make binaries

  #
  # Integration and CRI tests
  #

  integration-linux:
    name: Linux Integration
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40

    strategy:
      fail-fast: false
      matrix:
        runtime:
          - io.containerd.runc.v2
        runc: [runc, crun]
        os: [actuated-arm64-4cpu-16gb]
        cgroup_driver: [cgroupfs, systemd]

    env:
      GOTEST: gotestsum --
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-go

      - name: Install containerd dependencies
        env:
          RUNC_FLAVOR: ${{ matrix.runc }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gperf dmsetup strace xfsprogs
          script/setup/install-seccomp
          script/setup/install-runc
          script/setup/install-cni $(grep containernetworking/plugins go.mod | awk '{print $2}')
          script/setup/install-critools
          script/setup/install-failpoint-binaries

      - name: Install criu
        # NOTE: Required actuated enable CONFIG_CHECKPOINT_RESTORE
        #
        # REF: https://criu.org/Linux_kernel
        if: matrix.os != 'actuated-arm64-4cpu-16gb'
        run: |
          sudo add-apt-repository -y ppa:criu/ppa
          sudo apt-get update
          sudo apt-get install -y criu

      - name: Install containerd
        env:
          CGO_ENABLED: 1
        run: |
          make binaries GO_BUILD_FLAGS="-mod=vendor"
          sudo -E PATH=$PATH make install

      - run: script/setup/install-gotestsum
      - run: script/setup/install-teststat
      - name: Tests
        env:
          GOTESTSUM_JUNITFILE: ${{github.workspace}}/test-unit-root-junit.xml
          GOTESTSUM_JSONFILE: ${{github.workspace}}/test-unit-root-gotest.json
        run: |
          make test
          sudo -E PATH=$PATH make root-test
      - run: if [ -f *-gotest.json ]; then echo '# Root Test' >> $GITHUB_STEP_SUMMARY; teststat -markdown *-gotest.json >> $GITHUB_STEP_SUMMARY; fi
        if: always()
      - run: script/test/test2annotation.sh *-gotest.json
        if: always()

      - name: CRI Integration Test
        env:
          TEST_RUNTIME: ${{ matrix.runtime }}
          CGROUP_DRIVER: ${{ matrix.cgroup_driver }}
          RUNC_FLAVOR: ${{ matrix.runc }}
        run: |
          cat /sys/fs/cgroup/cgroup.controllers
          systemctl status
          [ "${RUNC_FLAVOR}" == "crun" ] && {
             export XDG_RUNTIME_DIR=/run/user/$(id -u)
          }
          runc --version
          whoami
          FOCUS=TestNriLinuxCpusetAdjustmentUpdate CONTAINERD_RUNTIME=$TEST_RUNTIME make cri-integration

      # Log the status of this VM to investigate issues like
      # https://github.com/containerd/containerd/issues/4969
      - name: Host Status
        if: always()
        run: |
          set -x
          mount
          df
          losetup -l
      - name: Kernel Message
        if: failure()
        run: |
          sudo lsmod
          sudo dmesg -T -f kern

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: TestResults ${{ matrix.runtime }} ${{matrix.runc}} ${{ matrix.os }} ${{ matrix.cgroup_driver }}
          path: |
            *-junit.xml
            *-gotest.json
            ${{github.workspace}}/report/*.xml
            ${{github.workspace}}/report/*.log

  # Currently Github actions UI supports no masks to mark matrix jobs as required to pass status checks.
  # This means that every time version of Go, containerd, or OS is changed, a corresponding job should
  # be added to the list of required checks. Which is not very convenient.
  # To workaround this, a special job is added to report statuses of all other jobs, with fixed title.
  # So it needs to be added to the list of required checks only once.
  #
  # See https://github.com/orgs/community/discussions/26822
  results:
    name: Report required job statuses
    runs-on: ubuntu-latest
    # List job dependencies which are required to pass status checks in order to be merged via merge queue.
    needs: [binaries, integration-linux]
    if: ${{ always() }}
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
